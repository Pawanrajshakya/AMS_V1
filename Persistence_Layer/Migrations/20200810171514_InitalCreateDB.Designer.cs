// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence_Layer.Data;

namespace Persistence_Layer.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200810171514_InitalCreateDB")]
    partial class InitalCreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Persistence_Layer.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsVisible");

                    b.Property<int>("LastModifiedBy");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("SortId");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2020, 8, 10, 13, 15, 14, 271, DateTimeKind.Local).AddTicks(6188),
                            Description = "Group A",
                            IsActive = true,
                            IsVisible = true,
                            LastModifiedBy = 0,
                            LastModifiedDate = new DateTime(2020, 8, 10, 13, 15, 14, 274, DateTimeKind.Local).AddTicks(6338),
                            SortId = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
